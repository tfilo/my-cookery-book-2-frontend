{"version":3,"file":"UnitPage-BuTrIaQi.js","sources":["../../src/pages/unitCategories/UnitPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Stack } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport * as yup from 'yup';\nimport { Api } from '../../openapi';\nimport { unitApi } from '../../utils/apiWrapper';\nimport { formatErrorMessage } from '../../utils/errorMessages';\nimport Input from '../../components/ui/Input';\nimport Modal from '../../components/ui/Modal';\nimport Spinner from '../../components/ui/Spinner';\nimport Checkbox from '../../components/ui/Checkbox';\n\ntype UnitForm = Api.CreateUnit | Api.UpdateUnit;\n\nconst schema = yup\n    .object({\n        name: yup.string().trim().max(80, 'Musí byť maximálne 80 znakov').required('Povinná položka'),\n        abbreviation: yup.string().trim().max(20, 'Musí byť maximálne 20 znakov').required('Povinná položka'),\n        required: yup.boolean().required('Povinná položka'),\n        unitCategoryId: yup.number().defined().label('Kategória jednotky')\n    })\n    .required();\n\nconst UnitPage: React.FC = () => {\n    const [error, setError] = useState<string>();\n    const navigate = useNavigate();\n    const params = useParams();\n    if (!params.categoryId) {\n        throw new Error('categoryId is required parameter');\n    }\n    const categoryId = parseInt(params.categoryId);\n    const queryClient = useQueryClient();\n\n    console.log(params);\n\n    const methods = useForm<UnitForm>({\n        resolver: yupResolver(schema),\n        defaultValues: async () => {\n            if (params.unitId) {\n                try {\n                    const data = await queryClient.fetchQuery({\n                        queryKey: ['unitcategories', categoryId, 'units', parseInt(params.unitId)] as const,\n                        queryFn: ({ queryKey, signal }) => {\n                            return unitApi.getUnit(queryKey[3], { signal });\n                        }\n                    });\n                    console.log(data);\n                    return data;\n                } catch (e) {\n                    formatErrorMessage(e).then((message) => setError(message));\n                }\n            }\n            return {\n                name: '',\n                abbreviation: '',\n                required: false,\n                unitCategoryId: categoryId\n            };\n        }\n    });\n\n    const {\n        formState: { isSubmitting, isLoading }\n    } = methods;\n\n    const cancelHandler = () => {\n        navigate('/units');\n    };\n\n    const { mutate: saveUnit, isPending: isSaving } = useMutation({\n        mutationFn: ({ data, unitId }: { data: UnitForm & { unitCategoryId: number }; unitId?: number }) => {\n            if (unitId) {\n                return unitApi.updateUnit(unitId, data);\n            } else {\n                return unitApi.createUnit(data);\n            }\n        },\n        onMutate: async ({ data }) => {\n            await queryClient.cancelQueries({ queryKey: ['unitcategories', data.unitCategoryId, 'units'] });\n        },\n        onSettled: async (data, error) => {\n            if (error) {\n                formatErrorMessage(error).then((message) => setError(message));\n            } else if (data) {\n                queryClient.setQueryData<Api.Unit>(['unitcategories', data.unitCategoryId, 'units', data.id], () => data);\n                queryClient.setQueryData<Api.SimpleUnit[]>(['unitcategories', data.unitCategoryId, 'units'], (units) => {\n                    const index = units?.findIndex((u) => u.id === data.id) ?? -1;\n                    if (index > -1) {\n                        const result = [...(units ?? [])];\n                        result[index] = {\n                            id: data.id,\n                            name: data.name,\n                            abbreviation: data.abbreviation,\n                            required: data.required\n                        };\n                        return result.sort((a, b) =>\n                            a.name.localeCompare(b.name, undefined, {\n                                sensitivity: 'base'\n                            })\n                        );\n                    } else {\n                        const result = [\n                            ...(units ?? []),\n                            {\n                                id: data.id,\n                                name: data.name,\n                                abbreviation: data.abbreviation,\n                                required: data.required\n                            }\n                        ];\n                        return result.sort((a, b) =>\n                            a.name.localeCompare(b.name, undefined, {\n                                sensitivity: 'base'\n                            })\n                        );\n                    }\n                });\n                navigate('/units');\n            }\n        }\n    });\n\n    const submitHandler: SubmitHandler<UnitForm> = (data: UnitForm) => {\n        saveUnit({\n            data: {\n                ...data,\n                unitCategoryId: categoryId\n            },\n            unitId: params.unitId ? parseInt(params.unitId) : undefined\n        });\n    };\n\n    return (\n        <div className='row justify-content-center'>\n            <div className='col-lg-6 pt-3'>\n                <h1>Jednotka</h1>\n                <FormProvider {...methods}>\n                    <Form\n                        noValidate\n                        onSubmit={methods.handleSubmit(submitHandler)}\n                    >\n                        <Input\n                            name='name'\n                            label='Názov jednotky'\n                        />\n                        <Input\n                            name='abbreviation'\n                            label='Skratka'\n                        />\n                        <Checkbox\n                            name='required'\n                            label='Povinná hodnota'\n                        />\n                        <Stack\n                            direction='horizontal'\n                            gap={2}\n                        >\n                            <Button\n                                variant='primary'\n                                type='submit'\n                            >\n                                {params.unitId ? 'Zmeniť jednotku' : 'Vytvoriť jednotku'}\n                            </Button>{' '}\n                            <Button\n                                variant='warning'\n                                type='button'\n                                onClick={cancelHandler}\n                            >\n                                Zrušiť\n                            </Button>\n                        </Stack>\n                    </Form>\n                </FormProvider>\n            </div>\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n            <Spinner show={isSubmitting || isLoading || isSaving} />\n        </div>\n    );\n};\n\nexport default UnitPage;\n"],"names":["schema","yup.object","yup.string","yup.boolean","yup.number","UnitPage","error","setError","useState","navigate","useNavigate","params","useParams","categoryId","queryClient","useQueryClient","methods","useForm","yupResolver","data","queryKey","signal","unitApi","formatErrorMessage","message","isSubmitting","isLoading","cancelHandler","saveUnit","isSaving","useMutation","unitId","units","index","u","result","a","b","submitHandler","jsxs","jsx","FormProvider","Form","Input","Checkbox","Stack","Button","Modal","Spinner"],"mappings":"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"}