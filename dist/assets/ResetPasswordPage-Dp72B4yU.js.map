{"version":3,"file":"ResetPasswordPage-Dp72B4yU.js","sources":["../../src/pages/signIn/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Api } from '../../openapi';\nimport { formatErrorMessage } from '../../utils/errorMessages';\nimport { authApi } from '../../utils/apiWrapper';\nimport Input from '../../components/ui/Input';\nimport Modal from '../../components/ui/Modal';\nimport Spinner from '../../components/ui/Spinner';\n\ntype ResetPasswordData = Api.ResetPasswordRequest & {\n    confirmPassword: string;\n};\n\nconst schema = yup\n    .object({\n        username: yup\n            .string()\n            .trim()\n            .min(4, 'Musia byť minimálne 4 znaky')\n            .max(50, 'Musí byť maximálne 50 znakov')\n            .required('Povinná položka'),\n        key: yup.string().trim().max(36, 'Musí byť maximálne 36 znakov').required('Povinná položka'),\n        newPassword: yup\n            .string()\n            .trim()\n            .min(8, 'Musí byť minimálne 8 znakov')\n            .max(255, 'Musí byť maximálne 255 znakov')\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n                'Musí obsahovať aspoň jedno malé písmeno, jedno veľké písmeno a jedno číslo'\n            )\n            .required('Povinná položka'),\n        confirmPassword: yup\n            .string()\n            .trim()\n            .oneOf([yup.ref('newPassword')], 'Zadané heslá sa nezhodujú')\n            .required('Povinná položka')\n    })\n    .required();\n\nconst ResetPasswordPage: React.FC = () => {\n    const methods = useForm<ResetPasswordData>({\n        resolver: yupResolver(schema)\n    });\n\n    const {\n        formState: { isSubmitting },\n        reset\n    } = methods;\n    const navigate = useNavigate();\n    const [error, setError] = useState<string>();\n    const [successfulConfirmation, setSuccessfulConfirmation] = useState(false);\n    const { username, key } = useParams();\n\n    useEffect(() => {\n        if (username && key) {\n            reset({ username: username, key: key });\n        }\n    }, [reset, username, key]);\n\n    const submitHandler = async ({ confirmPassword, ...formattedData }: ResetPasswordData) => {\n        try {\n            if (confirmPassword !== formattedData.newPassword) {\n                throw new Error('Passwords doesnt match');\n            }\n            await authApi.resetPassword(formattedData);\n            setSuccessfulConfirmation(true);\n        } catch (err) {\n            formatErrorMessage(err).then((message) => setError(message));\n        }\n    };\n    return (\n        <div className='row justify-content-center'>\n            <div className='col-lg-6 pt-3'>\n                <h1>Zmena hesla</h1>\n                <FormProvider {...methods}>\n                    <Form\n                        onSubmit={methods.handleSubmit(submitHandler)}\n                        noValidate\n                    >\n                        {!username && !key && (\n                            <>\n                                <p className='text-primary'>Pre zmenu hesla prosím zadajte prihlasovacie meno a registračný kľúč.</p>\n                                <Input\n                                    name='username'\n                                    label='Prihlasovacie meno'\n                                    type='text'\n                                />\n                                <Input\n                                    name='key'\n                                    label='Registračný kľúč'\n                                    type='text'\n                                />\n                            </>\n                        )}\n                        <Input\n                            name='newPassword'\n                            label='Heslo'\n                        />\n                        <Input\n                            name='confirmPassword'\n                            label='Potvrdenie hesla'\n                        />\n                        <Button\n                            variant='primary'\n                            type='submit'\n                        >\n                            Potvrdiť\n                        </Button>\n                        <Spinner show={isSubmitting} />\n                    </Form>\n                </FormProvider>\n            </div>\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n            <Modal\n                show={successfulConfirmation}\n                message='Zmena hesla prebehla úspešne.'\n                type='info'\n                onClose={() => {\n                    navigate('/signIn');\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;\n"],"names":["schema","yup.object","yup.string","yup.ref","ResetPasswordPage","methods","useForm","yupResolver","isSubmitting","reset","navigate","useNavigate","error","setError","useState","successfulConfirmation","setSuccessfulConfirmation","username","key","useParams","useEffect","submitHandler","confirmPassword","formattedData","authApi","err","formatErrorMessage","message","jsxs","jsx","FormProvider","Form","Fragment","Input","Button","Spinner","Modal"],"mappings":"0JAiBA,MAAMA,EAASC,EACH,CACJ,SAAUC,EACE,EACP,KACA,EAAA,IAAI,EAAG,6BAA6B,EACpC,IAAI,GAAI,8BAA8B,EACtC,SAAS,iBAAiB,EAC/B,IAAKA,IAAa,OAAO,IAAI,GAAI,8BAA8B,EAAE,SAAS,iBAAiB,EAC3F,YAAaA,EACD,EACP,KAAK,EACL,IAAI,EAAG,6BAA6B,EACpC,IAAI,IAAK,+BAA+B,EACxC,QACG,8CACA,4EAAA,EAEH,SAAS,iBAAiB,EAC/B,gBAAiBA,EACZ,EACA,KAAA,EACA,MAAM,CAACC,EAAQ,aAAa,CAAC,EAAG,2BAA2B,EAC3D,SAAS,iBAAiB,CACnC,CAAC,EACA,SAAS,EAERC,EAA8B,IAAM,CACtC,MAAMC,EAAUC,EAA2B,CACvC,SAAUC,EAAYP,CAAM,CAAA,CAC/B,EAEK,CACF,UAAW,CAAE,aAAAQ,CAAa,EAC1B,MAAAC,CAAA,EACAJ,EACEK,EAAWC,EAAY,EACvB,CAACC,EAAOC,CAAQ,EAAIC,WAAiB,EACrC,CAACC,EAAwBC,CAAyB,EAAIF,EAAAA,SAAS,EAAK,EACpE,CAAE,SAAAG,EAAU,IAAAC,CAAI,EAAIC,EAAU,EAEpCC,EAAAA,UAAU,IAAM,CACRH,GAAYC,GACNT,EAAA,CAAE,SAAAQ,EAAoB,IAAAC,EAAU,CAE3C,EAAA,CAACT,EAAOQ,EAAUC,CAAG,CAAC,EAEzB,MAAMG,EAAgB,MAAO,CAAE,gBAAAC,EAAiB,GAAGC,KAAuC,CAClF,GAAA,CACI,GAAAD,IAAoBC,EAAc,YAC5B,MAAA,IAAI,MAAM,wBAAwB,EAEtC,MAAAC,EAAQ,cAAcD,CAAa,EACzCP,EAA0B,EAAI,QACzBS,EAAK,CACVC,EAAmBD,CAAG,EAAE,KAAME,GAAYd,EAASc,CAAO,CAAC,CAAA,CAEnE,EAEI,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,6BACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,EACfA,EAAAA,IAACC,EAAc,CAAA,GAAGzB,EACd,SAAAuB,EAAA,KAACG,EAAA,CACG,SAAU1B,EAAQ,aAAagB,CAAa,EAC5C,WAAU,GAET,SAAA,CAAC,CAAAJ,GAAY,CAACC,GAEPU,EAAA,KAAAI,EAAA,SAAA,CAAA,SAAA,CAACH,EAAA,IAAA,IAAA,CAAE,UAAU,eAAe,SAAqE,wEAAA,EACjGA,EAAA,IAACI,EAAA,CACG,KAAK,WACL,MAAM,qBACN,KAAK,MAAA,CACT,EACAJ,EAAA,IAACI,EAAA,CACG,KAAK,MACL,MAAM,mBACN,KAAK,MAAA,CAAA,CACT,EACJ,EAEJJ,EAAA,IAACI,EAAA,CACG,KAAK,cACL,MAAM,OAAA,CACV,EACAJ,EAAA,IAACI,EAAA,CACG,KAAK,kBACL,MAAM,kBAAA,CACV,EACAJ,EAAA,IAACK,EAAA,CACG,QAAQ,UACR,KAAK,SACR,SAAA,UAAA,CAED,EACAL,EAAAA,IAACM,EAAQ,CAAA,KAAM3B,CAAc,CAAA,CAAA,CAAA,CAAA,CAErC,CAAA,CAAA,EACJ,EACAqB,EAAA,IAACO,EAAA,CACG,KAAM,CAAC,CAACxB,EACR,QAASA,EACT,KAAK,QACL,QAAS,IAAM,CACXC,EAAS,MAAS,CAAA,CACtB,CACJ,EACAgB,EAAA,IAACO,EAAA,CACG,KAAMrB,EACN,QAAQ,gCACR,KAAK,OACL,QAAS,IAAM,CACXL,EAAS,SAAS,CAAA,CACtB,CAAA,CACJ,EACJ,CAER"}