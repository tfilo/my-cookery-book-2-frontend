{"version":3,"file":"ProfilePage-BmT3hAHI.js","sources":["../../src/pages/profile/ProfilePage.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { Button, Form } from 'react-bootstrap';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Api } from '../../openapi';\nimport { AuthContext } from '../../store/auth-context';\nimport { formatErrorMessage } from '../../utils/errorMessages';\nimport { userApi } from '../../utils/apiWrapper';\nimport Modal from '../../components/ui/Modal';\nimport Spinner from '../../components/ui/Spinner';\nimport Input from '../../components/ui/Input';\nimport Checkbox from '../../components/ui/Checkbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCookieBite } from '@fortawesome/free-solid-svg-icons';\n\ntype UpdateProfileForm = Api.UpdateProfileRequest;\n\nconst schema = yup\n    .object({\n        password: yup.string().trim().max(255, 'Musí byť maximálne 255 znakov').required('Povinná položka'),\n        newPassword: yup\n            .string()\n            .trim()\n            .transform((val) => (val === '' ? null : val))\n            .min(8, 'Musí byť minimálne 8 znakov')\n            .max(255, 'Musí byť maximálne 255 znakov')\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n                'Musí obsahovať aspoň jedno malé písmeno, jedno veľke písmeno a jedno číslo'\n            )\n            .default(null)\n            .nullable(),\n        firstName: yup\n            .string()\n            .trim()\n            .transform((val) => (val === '' ? null : val))\n            .min(3, 'Musí mať minimálne 3 znaky')\n            .max(50, 'Musí mať maximálne 50 znakov')\n            .default(null)\n            .nullable(),\n        lastName: yup\n            .string()\n            .trim()\n            .transform((val) => (val === '' ? null : val))\n            .min(3, 'Musí mať minimálne 3 znaky')\n            .max(50, 'Musí mať maximálne 50 znakov')\n            .default(null)\n            .nullable(),\n        email: yup.string().trim().max(320, 'Musí mať maximálne 320 znakov').required('Povinná položka'),\n        notifications: yup.boolean().required('Povinná položka')\n    })\n    .required();\n\nconst ProfilePage: React.FC = () => {\n    const [error, setError] = useState<string>();\n    const [showModal, setShowModal] = useState<boolean>(false);\n    const { isLoggedIn, hasCookieConsent, setHasCookieConsent } = useContext(AuthContext);\n    const [username, setUsername] = useState('');\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const methods = useForm<UpdateProfileForm>({\n        resolver: yupResolver(schema)\n    });\n\n    const {\n        formState: { isSubmitting },\n        reset\n    } = methods;\n\n    const onChangeConsentHandler = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            setHasCookieConsent(e.target.checked);\n        },\n        [setHasCookieConsent]\n    );\n\n    const submitHandler: SubmitHandler<UpdateProfileForm> = async (data: UpdateProfileForm) => {\n        try {\n            await userApi.updateProfile(data);\n            setShowModal(true);\n        } catch (err) {\n            if (err instanceof Response && err.statusText === 'Unauthorized') {\n                setError('Zadané heslo nebolo platné');\n            } else {\n                formatErrorMessage(err).then((message) => setError(message));\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            const controller = new AbortController();\n            (async () => {\n                try {\n                    setIsLoading(true);\n                    const user = await userApi.getProfile({ signal: controller.signal });\n                    reset(user);\n                    setUsername(user.username);\n                } catch (err) {\n                    formatErrorMessage(err).then((message) => setError(message));\n                } finally {\n                    setIsLoading(false);\n                }\n            })();\n            return () => controller.abort();\n        }\n    }, [isLoggedIn, reset]);\n\n    return (\n        <div className='row justify-content-center'>\n            <div className='col-lg-6 pt-3'>\n                <h1>Profil používateľa</h1>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Používateľské meno</Form.Label>\n                    <Form.Control\n                        type='text'\n                        value={username ?? ''}\n                        readOnly\n                    />\n                </Form.Group>\n                <FormProvider {...methods}>\n                    <Form\n                        onSubmit={methods.handleSubmit(submitHandler)}\n                        noValidate\n                        className='pb-4'\n                    >\n                        <Input\n                            name='firstName'\n                            label='Meno'\n                            type='text'\n                        />\n                        <Input\n                            name='lastName'\n                            label='Priezvisko'\n                            type='text'\n                        />\n                        <Input\n                            name='email'\n                            label='E-mail'\n                            type='email'\n                        />\n                        <Input\n                            name='password'\n                            label='Heslo'\n                            type='password'\n                        />\n                        <Input\n                            name='newPassword'\n                            label='Nové heslo'\n                            type='password'\n                        />\n                        <Checkbox\n                            name='notifications'\n                            label='Posielať notifikácie e-mailom'\n                        />\n                        <Button\n                            variant='primary'\n                            type='submit'\n                        >\n                            Zmeniť\n                        </Button>\n                    </Form>\n                </FormProvider>\n                <h2>\n                    <FontAwesomeIcon icon={faCookieBite} /> Nastavenia cookies\n                </h2>\n                <p>\n                    Udelením súhlasu umožníte aplikácií ukladať informácie do lokálneho úložiska (localStorage) prehliadača. Aplikácia po\n                    udelení súhlasu umožňuje zapamätať si práve prihláseného používateľa. Vďaka tomu sa nebudete musieť pri opätovnej\n                    návšteve prihlasovať. Lokálne úložisko sa zároveň môže používať na uloženie \"záložiek\" na recepty. Uložené záložky sa\n                    viažú na prehliadač a nie používateľské konto. Po odhlásení budú tieto údaje odstránené.\n                </p>\n                <p>Informácia o udelenom súhlase sa ukladá do cookies prehliadača a je platná na 1 rok od udelenia súhlasu.</p>\n                <h3>Vaše preferencie cookies</h3>\n                <Form.Group className='mb-3'>\n                    <Form.Check\n                        type='switch'\n                        label='Udelenie súhlasu'\n                        checked={hasCookieConsent}\n                        onChange={onChangeConsentHandler}\n                    />\n                </Form.Group>\n            </div>\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n            <Modal\n                show={showModal}\n                message='Zmena profilu bola úspešná.'\n                type='info'\n                onClose={() => {\n                    setShowModal(false);\n                }}\n            />\n            <Spinner show={isSubmitting || isLoading} />\n        </div>\n    );\n};\n\nexport default ProfilePage;\n"],"names":["schema","yup.object","yup.string","val","yup.boolean","ProfilePage","error","setError","useState","showModal","setShowModal","isLoggedIn","hasCookieConsent","setHasCookieConsent","useContext","AuthContext","username","setUsername","isLoading","setIsLoading","methods","useForm","yupResolver","isSubmitting","reset","onChangeConsentHandler","useCallback","e","submitHandler","data","userApi","err","formatErrorMessage","message","useEffect","controller","user","jsxs","jsx","Form","FormProvider","Input","Checkbox","Button","FontAwesomeIcon","faCookieBite","Modal","Spinner"],"mappings":"4JAkBA,MAAMA,EAASC,EACH,CACJ,SAAUC,IAAa,OAAO,IAAI,IAAK,+BAA+B,EAAE,SAAS,iBAAiB,EAClG,YAAaA,EACD,EACP,KACA,EAAA,UAAWC,GAASA,IAAQ,GAAK,KAAOA,CAAI,EAC5C,IAAI,EAAG,6BAA6B,EACpC,IAAI,IAAK,+BAA+B,EACxC,QACG,8CACA,4EAAA,EAEH,QAAQ,IAAI,EACZ,SAAS,EACd,UAAWD,IAEN,OACA,UAAWC,GAASA,IAAQ,GAAK,KAAOA,CAAI,EAC5C,IAAI,EAAG,4BAA4B,EACnC,IAAI,GAAI,8BAA8B,EACtC,QAAQ,IAAI,EACZ,SAAS,EACd,SAAUD,IAEL,OACA,UAAWC,GAASA,IAAQ,GAAK,KAAOA,CAAI,EAC5C,IAAI,EAAG,4BAA4B,EACnC,IAAI,GAAI,8BAA8B,EACtC,QAAQ,IAAI,EACZ,SAAS,EACd,MAAOD,IAAa,OAAO,IAAI,IAAK,+BAA+B,EAAE,SAAS,iBAAiB,EAC/F,cAAeE,IAAc,SAAS,iBAAiB,CAC3D,CAAC,EACA,SAAS,EAERC,EAAwB,IAAM,CAChC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAiB,EACrC,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAkB,EAAK,EACnD,CAAE,WAAAG,EAAY,iBAAAC,EAAkB,oBAAAC,CAAoB,EAAIC,EAAAA,WAAWC,CAAW,EAC9E,CAACC,EAAUC,CAAW,EAAIT,EAAAA,SAAS,EAAE,EACrC,CAACU,EAAWC,CAAY,EAAIX,EAAAA,SAAkB,EAAK,EAEnDY,EAAUC,EAA2B,CACvC,SAAUC,EAAYtB,CAAM,CAAA,CAC/B,EAEK,CACF,UAAW,CAAE,aAAAuB,CAAa,EAC1B,MAAAC,CAAA,EACAJ,EAEEK,EAAyBC,EAAA,YAC1BC,GAA2C,CACpBd,EAAAc,EAAE,OAAO,OAAO,CACxC,EACA,CAACd,CAAmB,CACxB,EAEMe,EAAkD,MAAOC,GAA4B,CACnF,GAAA,CACM,MAAAC,EAAQ,cAAcD,CAAI,EAChCnB,EAAa,EAAI,QACZqB,EAAK,CACNA,aAAe,UAAYA,EAAI,aAAe,eAC9CxB,EAAS,4BAA4B,EAErCyB,EAAmBD,CAAG,EAAE,KAAME,GAAY1B,EAAS0B,CAAO,CAAC,CAC/D,CAER,EAEAC,OAAAA,EAAAA,UAAU,IAAM,CACZ,GAAIvB,EAAY,CACN,MAAAwB,EAAa,IAAI,gBACvB,OAAC,SAAY,CACL,GAAA,CACAhB,EAAa,EAAI,EACX,MAAAiB,EAAO,MAAMN,EAAQ,WAAW,CAAE,OAAQK,EAAW,OAAQ,EACnEX,EAAMY,CAAI,EACVnB,EAAYmB,EAAK,QAAQ,QACpBL,EAAK,CACVC,EAAmBD,CAAG,EAAE,KAAME,GAAY1B,EAAS0B,CAAO,CAAC,CAAA,QAC7D,CACEd,EAAa,EAAK,CAAA,CACtB,GACD,EACI,IAAMgB,EAAW,MAAM,CAAA,CAClC,EACD,CAACxB,EAAYa,CAAK,CAAC,EAGlBa,EAAA,KAAC,MAAI,CAAA,UAAU,6BACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACrBD,EAAA,KAAAE,EAAK,MAAL,CAAW,UAAU,OAClB,SAAA,CAACD,EAAAA,IAAAC,EAAK,MAAL,CAAW,SAAkB,oBAAA,CAAA,EAC9BD,EAAA,IAACC,EAAK,QAAL,CACG,KAAK,OACL,MAAOvB,GAAY,GACnB,SAAQ,EAAA,CAAA,CACZ,EACJ,EACAsB,EAAAA,IAACE,EAAc,CAAA,GAAGpB,EACd,SAAAiB,EAAA,KAACE,EAAA,CACG,SAAUnB,EAAQ,aAAaQ,CAAa,EAC5C,WAAU,GACV,UAAU,OAEV,SAAA,CAAAU,EAAA,IAACG,EAAA,CACG,KAAK,YACL,MAAM,OACN,KAAK,MAAA,CACT,EACAH,EAAA,IAACG,EAAA,CACG,KAAK,WACL,MAAM,aACN,KAAK,MAAA,CACT,EACAH,EAAA,IAACG,EAAA,CACG,KAAK,QACL,MAAM,SACN,KAAK,OAAA,CACT,EACAH,EAAA,IAACG,EAAA,CACG,KAAK,WACL,MAAM,QACN,KAAK,UAAA,CACT,EACAH,EAAA,IAACG,EAAA,CACG,KAAK,cACL,MAAM,aACN,KAAK,UAAA,CACT,EACAH,EAAA,IAACI,EAAA,CACG,KAAK,gBACL,MAAM,+BAAA,CACV,EACAJ,EAAA,IAACK,EAAA,CACG,QAAQ,UACR,KAAK,SACR,SAAA,QAAA,CAAA,CAED,CAAA,CAAA,EAER,SACC,KACG,CAAA,SAAA,CAACL,EAAAA,IAAAM,EAAA,CAAgB,KAAMC,CAAc,CAAA,EAAE,qBAAA,EAC3C,EACAP,EAAAA,IAAC,KAAE,SAKH,wbAAA,CAAA,EACAA,EAAAA,IAAC,KAAE,SAAwG,0GAAA,CAAA,EAC3GA,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC3BA,EAAA,IAAAC,EAAK,MAAL,CAAW,UAAU,OAClB,SAAAD,EAAA,IAACC,EAAK,MAAL,CACG,KAAK,SACL,MAAM,mBACN,QAAS3B,EACT,SAAUa,CAAA,CAAA,CAElB,CAAA,CAAA,EACJ,EACAa,EAAA,IAACQ,EAAA,CACG,KAAM,CAAC,CAACxC,EACR,QAASA,EACT,KAAK,QACL,QAAS,IAAM,CACXC,EAAS,MAAS,CAAA,CACtB,CACJ,EACA+B,EAAA,IAACQ,EAAA,CACG,KAAMrC,EACN,QAAQ,8BACR,KAAK,OACL,QAAS,IAAM,CACXC,EAAa,EAAK,CAAA,CACtB,CACJ,EACC4B,EAAAA,IAAAS,EAAA,CAAQ,KAAMxB,GAAgBL,CAAW,CAAA,CAAA,EAC9C,CAER"}