{"version":3,"file":"RecipeEditPage-BH76OdRY.js","sources":["../../node_modules/react-bootstrap/esm/InputGroupText.js","../../node_modules/react-bootstrap/esm/InputGroup.js","../../node_modules/react-bootstrap-typeahead/node_modules/@restart/hooks/esm/useForceUpdate.js","../../node_modules/react-bootstrap-typeahead/es/hooks/useAsync.js","../../node_modules/react-bootstrap-typeahead/es/components/AsyncTypeahead/AsyncTypeahead.js","../../src/components/ui/Textarea.tsx","../../src/components/ui/Select.tsx","../../src/components/recipes/edit/Ingredients/Ingredient.tsx","../../src/components/recipes/edit/Ingredients/Ingredients.tsx","../../src/components/recipes/edit/RecipeSections.tsx","../../src/components/ui/InputWithBtn.tsx","../../src/components/recipes/edit/Sources.tsx","../../src/components/recipes/edit/Pictures.tsx","../../src/components/recipes/edit/AssociatedRecipes.tsx","../../src/pages/recipes/RecipeEditPage.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(revision => revision + 1, 0);\n  return dispatch;\n}","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"allowNew\", \"delay\", \"isLoading\", \"minLength\", \"onInputChange\", \"onSearch\", \"options\", \"useCache\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport debounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport { isFunction } from '../utils';\n/**\n * Logic that encapsulates common behavior and functionality around\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\nfunction useAsync(props) {\n  var allowNew = props.allowNew,\n    _props$delay = props.delay,\n    delay = _props$delay === void 0 ? 200 : _props$delay,\n    isLoading = props.isLoading,\n    _props$minLength = props.minLength,\n    minLength = _props$minLength === void 0 ? 2 : _props$minLength,\n    onInputChange = props.onInputChange,\n    onSearch = props.onSearch,\n    _props$options = props.options,\n    options = _props$options === void 0 ? [] : _props$options,\n    _props$useCache = props.useCache,\n    useCache = _props$useCache === void 0 ? true : _props$useCache,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var cacheRef = useRef({});\n  var handleSearchDebouncedRef = useRef(null);\n  var queryRef = useRef(props.defaultInputValue || '');\n  var forceUpdate = useForceUpdate();\n  var prevProps = usePrevious(props);\n  var handleSearch = useCallback(function (query) {\n    queryRef.current = query;\n    if (!query || minLength && query.length < minLength) {\n      return;\n    }\n\n    // Use cached results, if applicable.\n    if (useCache && cacheRef.current[query]) {\n      // Re-render the component with the cached results.\n      forceUpdate();\n      return;\n    }\n\n    // Perform the search.\n    onSearch(query);\n  }, [forceUpdate, minLength, onSearch, useCache]);\n\n  // Set the debounced search function.\n  useEffect(function () {\n    handleSearchDebouncedRef.current = debounce(handleSearch, delay);\n    return function () {\n      handleSearchDebouncedRef.current && handleSearchDebouncedRef.current.cancel();\n    };\n  }, [delay, handleSearch]);\n  useEffect(function () {\n    // Ensure that we've gone from a loading to a completed state. Otherwise\n    // an empty response could get cached if the component updates during the\n    // request (eg: if the parent re-renders for some reason).\n    if (!isLoading && prevProps && prevProps.isLoading && useCache) {\n      cacheRef.current[queryRef.current] = options;\n    }\n  });\n  var handleInputChange = useCallback(function (e) {\n    var query = e.target.value;\n    onInputChange && onInputChange(e);\n    handleSearchDebouncedRef.current && handleSearchDebouncedRef.current(query);\n  }, [onInputChange]);\n  var cachedQuery = cacheRef.current[queryRef.current];\n  return _objectSpread(_objectSpread({}, otherProps), {}, {\n    // Disable custom selections during a search if `allowNew` isn't a function.\n    allowNew: isFunction(allowNew) ? allowNew : allowNew && !isLoading,\n    isLoading: isLoading,\n    minLength: minLength,\n    onInputChange: handleInputChange,\n    options: useCache && cachedQuery ? cachedQuery : options,\n    query: queryRef.current\n  });\n}\nexport default useAsync;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"query\"];\nimport React, { forwardRef } from 'react';\nimport { useAsync } from '../../hooks';\nimport Typeahead from '../Typeahead';\nvar AsyncTypeahead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var emptyLabel = props.emptyLabel,\n    isLoading = props.isLoading,\n    _props$promptText = props.promptText,\n    promptText = _props$promptText === void 0 ? 'Type to search...' : _props$promptText,\n    _props$searchText = props.searchText,\n    searchText = _props$searchText === void 0 ? 'Searching...' : _props$searchText;\n  var _useAsync = useAsync(props),\n    query = _useAsync.query,\n    asyncProps = _objectWithoutProperties(_useAsync, _excluded);\n  function getEmptyLabel() {\n    if (!query.length) {\n      return promptText;\n    }\n    if (isLoading) {\n      return searchText;\n    }\n    return emptyLabel;\n  }\n  return /*#__PURE__*/React.createElement(Typeahead, _extends({}, props, asyncProps, {\n    emptyLabel: getEmptyLabel(),\n    ref: ref\n  }));\n});\nexport default AsyncTypeahead;","import React, { useId } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\n\ntype TextareaProps = {\n    label: string;\n    name: string;\n    disabled?: boolean;\n    className?: string;\n    rows?: number;\n};\n\nconst Textarea: React.FC<TextareaProps> = (props) => {\n    const id = useId();\n    const {\n        register,\n        formState: { errors }\n    } = useFormContext();\n\n    const errorMessage = errors[props.name]?.message?.toString();\n\n    return (\n        <Form.Group\n            className={`mb-3 ${props.className ?? ''}`}\n            controlId={`${id}_${props.name}`}\n        >\n            <Form.Label>{props.label}</Form.Label>\n            <Form.Control\n                {...register(props.name)}\n                as='textarea'\n                name={props.name}\n                disabled={props.disabled}\n                isInvalid={!!errorMessage}\n                rows={props.rows}\n            />\n            <Form.Control.Feedback type='invalid'>{errorMessage}</Form.Control.Feedback>\n        </Form.Group>\n    );\n};\n\nexport default Textarea;\n","import React, { useEffect, useId } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { get } from 'lodash';\n\nexport type SelectGroupOptions = {\n    optGroupId: number;\n    optGroupName: string;\n    options: SelectOption[];\n};\n\nexport type SelectOption = {\n    value: string | number;\n    label: string;\n};\n\ntype SelectProps = {\n    label: string;\n    name: string;\n    options: (SelectOption | SelectGroupOptions)[];\n    disabled?: boolean;\n    multiple?: boolean;\n};\n\nconst Select: React.FC<SelectProps> = (props) => {\n    const id = useId();\n    const {\n        register,\n        formState: { errors },\n        getValues,\n        setValue\n    } = useFormContext();\n\n    const errorMessage = get(errors, props.name)?.message;\n    const value = getValues(props.name);\n\n    useEffect(() => {\n        if (props.multiple) {\n            if (Array.isArray(value)) {\n                setValue(\n                    props.name,\n                    value.filter((v) => !!v).map((v) => v.toString())\n                );\n            } else if (value !== undefined && value !== null && value.toString().trim() !== '') {\n                setValue(props.name, [value.toString()]);\n            } else {\n                setValue(props.name, []);\n            }\n        } else {\n            setValue(props.name, value !== undefined && value !== null && value.toString().trim() !== '' ? value.toString() : '-1');\n        }\n    }, [value, props.multiple, props.name, setValue]);\n\n    return (\n        <Form.Group\n            className='mb-3'\n            controlId={`${id}_${props.name}`}\n        >\n            <Form.Label>{props.label}</Form.Label>\n            <Form.Select\n                {...register(props.name)}\n                disabled={props.disabled}\n                multiple={props.multiple}\n                isInvalid={!!errorMessage}\n            >\n                {!props.multiple && (\n                    <option\n                        value='-1'\n                        disabled\n                    >\n                        Prosím zvolte možnosť\n                    </option>\n                )}\n                {props.options.map((option) => {\n                    if ('options' in option) {\n                        return (\n                            <optgroup\n                                key={option.optGroupId}\n                                label={option.optGroupName}\n                            >\n                                {option.options.map((opt) => (\n                                    <option\n                                        key={opt.value}\n                                        value={opt.value}\n                                    >\n                                        {opt.label}\n                                    </option>\n                                ))}\n                            </optgroup>\n                        );\n                    } else {\n                        return (\n                            <option\n                                key={option.value}\n                                value={option.value}\n                            >\n                                {option.label}\n                            </option>\n                        );\n                    }\n                })}\n            </Form.Select>\n            <Form.Control.Feedback type='invalid'>{errorMessage?.toString()}</Form.Control.Feedback>\n        </Form.Group>\n    );\n};\n\nexport default Select;\n","import { faCircleMinus, faGripVertical } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { get } from 'lodash';\nimport React, { useCallback, useId, useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { type UseFieldArrayMove, type UseFieldArrayRemove, useFormContext } from 'react-hook-form';\nimport type { SelectGroupOptions } from '../../../ui/Select';\n\ntype IngredientProps = {\n    name: string;\n    index: number;\n    units: SelectGroupOptions[];\n    move: UseFieldArrayMove;\n    remove: UseFieldArrayRemove;\n};\n\nconst Ingredient: React.FC<IngredientProps> = ({ index, move, name, remove, units }) => {\n    const {\n        register,\n        formState: { errors }\n    } = useFormContext();\n    const id = useId();\n\n    const [dragable, setDragable] = useState<boolean>(false);\n\n    const onDragStart = useCallback(\n        (e: React.DragEvent<HTMLElement>) => {\n            e.dataTransfer.clearData();\n            if (dragable) {\n                e.dataTransfer.setData('position', index.toString());\n                e.dataTransfer.dropEffect = 'move';\n            }\n        },\n        [dragable, index]\n    );\n\n    const onDragOver = useCallback((e: React.DragEvent<HTMLElement>) => {\n        e.preventDefault();\n    }, []);\n\n    const onDrop = useCallback(\n        (e: React.DragEvent<HTMLElement>) => {\n            const data1 = +e.dataTransfer.getData('position');\n            move(data1, index);\n        },\n        [index, move]\n    );\n\n    const nameErrorMessage = get(errors, `${name}.name`)?.message;\n    const valueErrorMessage = get(errors, `${name}.value`)?.message;\n    const unitErrorMessage = get(errors, `${name}.unitId`)?.message;\n\n    const onEnableDrag = useCallback(() => {\n        setDragable(true);\n    }, []);\n\n    const onDisableDrag = useCallback(() => {\n        setDragable(false);\n    }, []);\n\n    return (\n        <section>\n            <input\n                {...register(`${name}.id`)}\n                type='hidden'\n            />\n            <InputGroup\n                className='mb-2 '\n                onDragStart={onDragStart}\n                onDragOver={onDragOver}\n                onDrop={onDrop}\n                draggable={dragable}\n            >\n                <Button\n                    variant='outline-secondary'\n                    title='Presunúť ingredienciu'\n                    type='button'\n                    className='mcb-ingredient-handle'\n                    onMouseOver={onEnableDrag}\n                    onMouseOut={onDisableDrag}\n                    onTouchStart={onEnableDrag}\n                    onTouchEnd={onDisableDrag}\n                >\n                    <FontAwesomeIcon icon={faGripVertical} />\n                </Button>\n                <Form.Control\n                    {...register(`${name}.name`)}\n                    aria-label='Názov suroviny'\n                    placeholder='Názov'\n                    type='text'\n                    className='mcb-ingredient-name'\n                    isInvalid={!!nameErrorMessage}\n                    id={`${id}_name`}\n                />\n\n                <Form.Control\n                    {...register(`${name}.value`)}\n                    aria-label='Množstvo suroviny'\n                    placeholder='Množstvo'\n                    type='number'\n                    className='mcb-ingredient-volume'\n                    isInvalid={!!valueErrorMessage}\n                    id={`${id}_value`}\n                    min={0}\n                />\n                <Form.Select\n                    {...register(`${name}.unitId`)}\n                    aria-label='Jednotka'\n                    name={`${name}.unitId`}\n                    className='mcb-ingredient-unit'\n                    isInvalid={!!unitErrorMessage}\n                    id={`${id}_unitId`}\n                >\n                    <option\n                        disabled\n                        value='-1'\n                    >\n                        Vyberte Jednotku\n                    </option>\n                    {units.map((option) => {\n                        return (\n                            <optgroup\n                                key={option.optGroupId}\n                                label={option.optGroupName}\n                            >\n                                {option.options.map((opt) => (\n                                    <option\n                                        key={opt.value}\n                                        value={opt.value}\n                                    >\n                                        {opt.label}\n                                    </option>\n                                ))}\n                            </optgroup>\n                        );\n                    })}\n                </Form.Select>\n                <Button\n                    variant='outline-danger'\n                    aria-label='vymazať ingredienciu'\n                    type='button'\n                    onClick={() => remove(index)}\n                    className='mcb-ingredient-delete'\n                >\n                    <FontAwesomeIcon icon={faCircleMinus} />\n                </Button>\n            </InputGroup>\n            {(nameErrorMessage || valueErrorMessage || unitErrorMessage) && (\n                <ul>\n                    {nameErrorMessage && (\n                        <li className='text-danger'>\n                            <label htmlFor={`${id}_name`}>{nameErrorMessage?.toString()}</label>\n                        </li>\n                    )}\n                    {valueErrorMessage && (\n                        <li className='text-danger'>\n                            <label htmlFor={`${id}_value`}>{valueErrorMessage?.toString()}</label>\n                        </li>\n                    )}\n                    {unitErrorMessage && (\n                        <li className='text-danger'>\n                            <label htmlFor={`${id}_unitId`}>{unitErrorMessage?.toString()}</label>\n                        </li>\n                    )}\n                </ul>\n            )}\n        </section>\n    );\n};\n\nexport default Ingredient;\n","import React from 'react';\nimport { Button, Form, Stack } from 'react-bootstrap';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport type { SelectGroupOptions } from '../../../ui/Select';\nimport Ingredient from './Ingredient';\nimport type { RecipeForm } from '../../../../pages/recipes/RecipeEditPage';\n\ntype IngredientsProps = {\n    recipeSectionName: string;\n    units: SelectGroupOptions[];\n};\n\nconst Ingredients: React.FC<IngredientsProps> = (props) => {\n    const { control } = useFormContext<RecipeForm>();\n\n    const { fields, append, remove, move } = useFieldArray({\n        name: `${props.recipeSectionName}.ingredients` as 'recipeSections.0.ingredients',\n        keyName: '_id',\n        control\n    });\n\n    return (\n        <>\n            <Stack\n                direction='horizontal'\n                gap={3}\n            >\n                <Form.Label>Suroviny</Form.Label>\n                <Button\n                    aria-label='pridať ingredienciu'\n                    variant='outline-success'\n                    type='button'\n                    className='border-0'\n                    onClick={() =>\n                        append({\n                            name: '',\n                            sortNumber: fields.length + 1,\n                            value: null,\n                            unitId: -1\n                        })\n                    }\n                >\n                    <FontAwesomeIcon icon={faCirclePlus} />\n                </Button>\n            </Stack>\n\n            {fields.map((field, index) => {\n                return (\n                    <Ingredient\n                        key={field._id}\n                        name={`${props.recipeSectionName}.ingredients.${index}`}\n                        index={index}\n                        units={props.units}\n                        move={move}\n                        remove={remove}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nexport default Ingredients;\n","import React from 'react';\nimport { Button, Card, Form, Stack } from 'react-bootstrap';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport Input from '../../ui/Input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus, faCircleMinus, faCircleChevronDown, faCircleChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport Textarea from '../../ui/Textarea';\nimport type { SelectGroupOptions } from '../../ui/Select';\nimport Ingredients from './Ingredients/Ingredients';\nimport type { RecipeForm } from '../../../pages/recipes/RecipeEditPage';\n\ntype RecipeSectionsProps = {\n    units: SelectGroupOptions[];\n};\n\nconst RecipeSections: React.FC<RecipeSectionsProps> = (props) => {\n    const { register, control } = useFormContext<RecipeForm>();\n\n    const { fields, append, remove, move } = useFieldArray({\n        name: 'recipeSections',\n        keyName: '_id',\n        control\n    });\n\n    return (\n        <>\n            <Stack\n                direction='horizontal'\n                gap={3}\n            >\n                <Form.Label>Sekcie</Form.Label>\n                <Button\n                    aria-label='pridať sekciu'\n                    variant='outline-success'\n                    type='button'\n                    className='border-0'\n                    onClick={() =>\n                        append({\n                            name: '',\n                            method: null,\n                            ingredients: [\n                                {\n                                    name: '',\n                                    value: null,\n                                    unitId: -1,\n                                    sortNumber: 1\n                                }\n                            ],\n                            sortNumber: fields.length + 1\n                        })\n                    }\n                >\n                    <FontAwesomeIcon icon={faCirclePlus} />\n                </Button>\n            </Stack>\n\n            {fields.map((field, index, array) => {\n                return (\n                    <Card\n                        key={field._id}\n                        className='mb-3'\n                    >\n                        <Card.Body className='pb-0'>\n                            <section>\n                                <div className='position-absolute mcb-card-action-btn'>\n                                    <Button\n                                        variant='outline-light'\n                                        aria-label='presunúť sekciu nahor'\n                                        type='button'\n                                        onClick={() => move(index, index - 1)}\n                                        className='border-0'\n                                        disabled={index === 0}\n                                    >\n                                        <FontAwesomeIcon\n                                            className='text-dark'\n                                            icon={faCircleChevronUp}\n                                        />\n                                    </Button>\n                                    <Button\n                                        variant='outline-light'\n                                        aria-label='presunúť sekciu nadol'\n                                        type='button'\n                                        onClick={() => move(index, index + 1)}\n                                        className='border-0'\n                                        disabled={index === array.length - 1}\n                                    >\n                                        <FontAwesomeIcon\n                                            className='text-dark'\n                                            icon={faCircleChevronDown}\n                                        />\n                                    </Button>\n                                    <Button\n                                        aria-label='vymazať sekciu'\n                                        variant='outline-danger'\n                                        type='button'\n                                        onClick={() => remove(index)}\n                                        className='border-0'\n                                    >\n                                        <FontAwesomeIcon icon={faCircleMinus} />\n                                    </Button>\n                                </div>\n                                <input\n                                    {...register(`recipeSections.${index}.id`)}\n                                    type='hidden'\n                                />\n                                <Input\n                                    name={`recipeSections.${index}.name`}\n                                    label='Názov sekcie'\n                                    className='col-12'\n                                />\n                                <Ingredients\n                                    units={props.units}\n                                    recipeSectionName={`recipeSections.${index}`}\n                                />\n                                <Textarea\n                                    rows={10}\n                                    className='mt-3'\n                                    label='Postup prípravy sekcie'\n                                    name={`recipeSections.${index}.method`}\n                                />\n                            </section>\n                        </Card.Body>\n                    </Card>\n                );\n            })}\n        </>\n    );\n};\n\nexport default RecipeSections;\n","import React, { useId, type JSX } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { get } from 'lodash';\nimport { type ButtonVariant } from 'react-bootstrap/esm/types';\n\ntype InputWithBtnProps = {\n    name: string;\n    button: {\n        variant?: ButtonVariant;\n        children: string | JSX.Element;\n        label: string;\n        style?: React.CSSProperties;\n    };\n    onClick: () => void;\n    placeholder?: string;\n    autoComplete?: 'on' | 'off';\n    disabled?: boolean;\n    type?: 'text' | 'password' | 'number';\n};\n\nconst InputWithBtn: React.FC<InputWithBtnProps> = (props) => {\n    const {\n        register,\n        formState: { errors }\n    } = useFormContext();\n    const id = useId();\n\n    const errorMessage = get(errors, props.name)?.message;\n\n    return (\n        <InputGroup className='mt-1 mb-1'>\n            <Form.Control\n                {...register(props.name)}\n                id={`${id}_${props.name}`}\n                type={props.type ?? 'text'}\n                disabled={props.disabled}\n                autoComplete={props.autoComplete}\n                placeholder={props.placeholder}\n                isInvalid={!!errorMessage}\n            />\n            <Button\n                variant={props.button.variant ?? 'outline-secondary'}\n                onClick={props.onClick}\n                type='button'\n                title={props.button.label}\n                aria-label={props.button.label}\n                style={props.button.style}\n            >\n                {props.button.children}\n            </Button>\n            <Form.Control.Feedback type='invalid'>{errorMessage?.toString()}</Form.Control.Feedback>\n        </InputGroup>\n    );\n};\n\nexport default InputWithBtn;\n","import React, { type JSX } from 'react';\nimport { Button, Card, Form, Stack } from 'react-bootstrap';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport InputWithBtn from '../../ui/InputWithBtn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleMinus, faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport type { RecipeForm } from '../../../pages/recipes/RecipeEditPage';\nimport type { ButtonVariant } from 'react-bootstrap/esm/types';\n\nconst buttonConfig: {\n    variant?: ButtonVariant;\n    children: string | JSX.Element;\n    label: string;\n    style?: React.CSSProperties;\n} = {\n    label: 'Odstrániť zdroj',\n    children: <FontAwesomeIcon icon={faCircleMinus} />,\n    variant: 'outline-danger',\n    style: {\n        borderRightColor: 'rgba(0, 0, 0, 0.175)',\n        borderTopColor: 'rgba(0, 0, 0, 0.175)',\n        borderBottomColor: 'rgba(0, 0, 0, 0.175)',\n        borderLeftColor: 'rgba(0, 0, 0, 0)',\n        borderTopRightRadius: '0.375rem',\n        borderBottomRightRadius: '0.375rem'\n    }\n};\n\nconst Sources: React.FC = () => {\n    const { control } = useFormContext<RecipeForm>();\n    const { fields, append, remove } = useFieldArray({\n        name: 'sources',\n        keyName: '_id',\n        control\n    });\n\n    return (\n        <>\n            <Stack\n                direction='horizontal'\n                gap={3}\n            >\n                <Form.Label>Zdroj receptu</Form.Label>\n                <Button\n                    aria-label='pridať zdroj receptu'\n                    variant='outline-success'\n                    type='button'\n                    className='border-0'\n                    onClick={() =>\n                        append({\n                            value: ''\n                        })\n                    }\n                >\n                    <FontAwesomeIcon icon={faCirclePlus} />\n                </Button>\n            </Stack>\n\n            {fields.length > 0 && (\n                <Card className='mb-3'>\n                    <Card.Body>\n                        {fields.map((field, index) => {\n                            return (\n                                <section key={field._id}>\n                                    <InputWithBtn\n                                        name={`sources.${index}.value`}\n                                        placeholder='Url'\n                                        button={buttonConfig}\n                                        onClick={() => remove(index)}\n                                    />\n                                </section>\n                            );\n                        })}\n                    </Card.Body>\n                </Card>\n            )}\n        </>\n    );\n};\n\nexport default Sources;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport { type FieldArrayWithId, type UseFieldArrayMove, type UseFieldArrayRemove, useFieldArray, useFormContext } from 'react-hook-form';\nimport { pictureApi } from '../../../utils/apiWrapper';\nimport Input from '../../ui/Input';\nimport type { RecipeForm } from '../../../pages/recipes/RecipeEditPage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGripVertical, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { formatErrorMessage } from '../../../utils/errorMessages';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Api } from '../../../openapi';\n\ntype PictureProps = {\n    field: FieldArrayWithId<RecipeForm, 'pictures', '_id'>;\n    remove: UseFieldArrayRemove;\n    move: UseFieldArrayMove;\n    index: number;\n};\n\nconst Picture: React.FC<PictureProps> = ({ remove, move, field, index }) => {\n    const [dragable, setDragable] = useState<boolean>(false);\n    const [url, setUrl] = useState<string>();\n    const queryClient = useQueryClient();\n\n    useEffect(() => {\n        let url: string | undefined = undefined;\n        (async () => {\n            const response = await queryClient.fetchQuery({\n                queryKey: ['thumbnails', field.id] as const,\n                queryFn: async ({ queryKey }) => pictureApi.getPictureThumbnail(queryKey[1])\n            });\n            if (response instanceof Blob) {\n                url = URL.createObjectURL(response);\n                setUrl(url);\n            }\n        })();\n\n        return () => {\n            if (url) {\n                URL.revokeObjectURL(url);\n            }\n        };\n    }, [field.id, queryClient]);\n\n    const onDragStart = useCallback(\n        (e: React.DragEvent<HTMLElement>) => {\n            e.dataTransfer.clearData();\n            if (dragable) {\n                e.dataTransfer.setData('position', index.toString());\n                e.dataTransfer.dropEffect = 'move';\n            }\n        },\n        [dragable, index]\n    );\n\n    const onDragOver = useCallback((e: React.DragEvent<HTMLElement>) => {\n        e.preventDefault();\n    }, []);\n\n    const onDrop = useCallback(\n        (e: React.DragEvent<HTMLElement>) => {\n            const data1 = +e.dataTransfer.getData('position');\n            move(data1, index);\n        },\n        [move, index]\n    );\n\n    const removePictureHandler = useCallback(\n        async (index: number, url?: string) => {\n            remove(index);\n            queryClient.removeQueries({\n                queryKey: ['thumbnails', field.id]\n            });\n            queryClient.removeQueries({\n                queryKey: ['pictures', field.id]\n            });\n            if (url) {\n                URL.revokeObjectURL(url);\n            }\n        },\n        [field.id, queryClient, remove]\n    );\n\n    const onEnableDrag = useCallback(() => {\n        setDragable(true);\n    }, []);\n\n    const onDisableDrag = useCallback(() => {\n        setDragable(false);\n    }, []);\n\n    return (\n        <Col>\n            <Card\n                onDragStart={onDragStart}\n                onDragOver={onDragOver}\n                onDrop={onDrop}\n                draggable={dragable}\n            >\n                <Card.Img\n                    variant='top'\n                    src={url}\n                    alt={field.name}\n                    className='mcb-card-img'\n                />\n                <Button\n                    title='Vymazať obrázok'\n                    variant='outline-danger'\n                    type='button'\n                    onClick={removePictureHandler.bind(null, index, url)}\n                    className='position-absolute border-0 mcb-card-action-btn'\n                >\n                    <FontAwesomeIcon icon={faTrash} />\n                </Button>\n                <Button\n                    title='Presunúť obrázok'\n                    variant='outline-secondary'\n                    type='button'\n                    className='position-absolute border-0 mcb-card-handle'\n                    onMouseOver={onEnableDrag}\n                    onMouseOut={onDisableDrag}\n                    onTouchStart={onEnableDrag}\n                    onTouchEnd={onDisableDrag}\n                >\n                    <FontAwesomeIcon icon={faGripVertical} />\n                </Button>\n                <Card.Body className='pb-0'>\n                    <Input\n                        name={`pictures.${index}.name`}\n                        type='text'\n                        label='názov obrázka'\n                    />\n                </Card.Body>\n            </Card>\n        </Col>\n    );\n};\n\nconst Pictures: React.FC = () => {\n    const { control } = useFormContext<RecipeForm>();\n    const { fields, append, remove, move } = useFieldArray({\n        name: 'pictures',\n        keyName: '_id',\n        control\n    });\n\n    const imageInputRef = useRef<HTMLInputElement>(null);\n    const [error, setError] = useState<string>();\n    const queryClient = useQueryClient();\n\n    const { mutate: uploadImage, isPending: isUploadingImage } = useMutation({\n        mutationFn: (image: string | Blob) => {\n            return pictureApi.uploadPicture(image);\n        },\n        onMutate: async () => {\n            await queryClient.cancelQueries({ queryKey: ['thumbnails'] });\n            await queryClient.cancelQueries({ queryKey: ['pictures'] });\n        },\n        onSettled: (data, error) => {\n            if (error) {\n                formatErrorMessage(error).then((message) => setError(message));\n            } else if (data) {\n                queryClient.removeQueries({ queryKey: ['thumbnails', data.id] });\n                queryClient.removeQueries({ queryKey: ['pictures', data.id] });\n                append({ id: data.id, name: 'fotografia', sortNumber: fields.length + 1 });\n                if (imageInputRef.current) {\n                    imageInputRef.current.value = '';\n                }\n            }\n        }\n    });\n\n    const pictureHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length === 1) {\n            uploadImage(event.target.files[0]);\n        }\n    };\n\n    return (\n        <>\n            <Form.Group\n                controlId='pictureUpload'\n                className='mb-3'\n            >\n                <Form.Label>Pridajte obrázok</Form.Label>\n                <Form.Control\n                    type='file'\n                    accept='image/jpeg'\n                    onChange={pictureHandler}\n                    ref={imageInputRef}\n                />\n            </Form.Group>\n            <Row\n                xs={1}\n                sm={2}\n                lg={4}\n                className='g-4 pb-4'\n            >\n                {fields.map((field, index) => {\n                    return (\n                        <Picture\n                            key={field.id}\n                            field={field}\n                            move={move}\n                            remove={remove}\n                            index={index}\n                        />\n                    );\n                })}\n            </Row>\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n            <Spinner show={isUploadingImage} />\n        </>\n    );\n};\n\nexport default Pictures;\n","import React, { useState, useId } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { Api } from '../../../openapi';\nimport { recipeApi } from '../../../utils/apiWrapper';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport type { RecipeForm } from '../../../pages/recipes/RecipeEditPage';\nimport { get } from 'lodash';\nimport Spinner from '../../ui/Spinner';\nimport { formatErrorMessage } from '../../../utils/errorMessages';\nimport Modal from '../../ui/Modal';\nimport { useQueryClient } from '@tanstack/react-query';\n\nconst AssociatedRecipes: React.FC = () => {\n    const id = useId();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string>();\n    const [list, setList] = useState<\n        {\n            name: string;\n            id: number;\n        }[]\n    >([]);\n    const queryClient = useQueryClient();\n\n    const {\n        control,\n        formState: { errors }\n    } = useFormContext<RecipeForm>();\n\n    const handleSearch = async (query: string) => {\n        try {\n            setIsLoading(true);\n            const data = {\n                search: query,\n                categoryId: null,\n                tags: [],\n                page: 0,\n                pageSize: 5,\n                orderBy: Api.RecipeSearchCriteria.OrderByEnum.Name,\n                order: Api.RecipeSearchCriteria.OrderEnum.ASC\n            };\n            const recipes = await queryClient.fetchQuery({\n                queryKey: ['find', data] as const,\n                queryFn: async ({ queryKey, signal }) => recipeApi.findRecipe(queryKey[1], { signal })\n            });\n            const recipeList = recipes.rows.map((recipe) => {\n                return { name: recipe.name, id: recipe.id };\n            });\n            setList(recipeList);\n        } catch (err) {\n            formatErrorMessage(err).then((message) => setError(message));\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const errorMessage = get(errors, 'associatedRecipes')?.message;\n    const filterBy = () => true;\n\n    return (\n        <>\n            <Form.Group className='mt-2 mb-3'>\n                <Form.Label htmlFor={`${id}associatedRecipes`}>Súvisiace recepty</Form.Label>\n                <Controller\n                    name='associatedRecipes'\n                    control={control}\n                    render={({ field }) => (\n                        <AsyncTypeahead\n                            {...field}\n                            selected={field.value}\n                            filterBy={filterBy}\n                            id={`${id}associatedRecipes`}\n                            multiple\n                            onSearch={handleSearch}\n                            options={list}\n                            placeholder='Vyberte recept...'\n                            isLoading={isLoading}\n                            searchText='Vyhľadávam...'\n                            promptText='Prosím zadajte vyhľadávaný text.'\n                            emptyLabel='Nič sa nenašlo.'\n                            labelKey='name'\n                            isInvalid={!!errorMessage}\n                        />\n                    )}\n                />\n                <Form.Control.Feedback type='invalid'>{errorMessage?.toString()}</Form.Control.Feedback>\n            </Form.Group>\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n            <Spinner show={isLoading} />\n        </>\n    );\n};\n\nexport default AssociatedRecipes;\n","import React, { useCallback, useId, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useForm, SubmitHandler, FormProvider, Controller } from 'react-hook-form';\nimport { Button, Form, Stack } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport * as yup from 'yup';\nimport { Api } from '../../openapi';\nimport Modal from '../../components/ui/Modal';\nimport { categoryApi, recipeApi, tagApi, unitApi, unitCategoryApi } from '../../utils/apiWrapper';\nimport { DEFAULT_PAGE } from '../../utils/constants';\nimport { formatErrorMessage } from '../../utils/errorMessages';\nimport Spinner from '../../components/ui/Spinner';\nimport Input from '../../components/ui/Input';\nimport Textarea from '../../components/ui/Textarea';\nimport Select, { SelectGroupOptions } from '../../components/ui/Select';\nimport RecipeSections from '../../components/recipes/edit/RecipeSections';\nimport Sources from '../../components/recipes/edit/Sources';\nimport Pictures from '../../components/recipes/edit/Pictures';\nimport AssociatedRecipes from '../../components/recipes/edit/AssociatedRecipes';\n\nexport interface RecipeForm extends Omit<Api.CreateRecipe | Api.UpdateRecipe, 'sources' | 'associatedRecipes' | 'tags'> {\n    sources: {\n        value: string;\n    }[];\n    associatedRecipes: {\n        id: number;\n        name: string;\n    }[];\n    tags: {\n        id: number;\n        name: string;\n    }[];\n}\n\nconst schema = yup\n    .object({\n        name: yup.string().trim().min(1, 'Povinná položka').max(80, 'Musí byť maximálne 80 znakov').required(),\n        description: yup\n            .string()\n            .defined()\n            .trim()\n            .transform((val) => (val === '' ? null : val))\n            .max(160, 'Musí byť maximálne 160 znakov')\n            .default(null)\n            .nullable(),\n        serves: yup\n            .number()\n            .transform((val) => (/\\b([1-9]|[1-9][0-9]|100)\\b/.test(val) ? val : null))\n            .integer()\n            .defined()\n            .min(1, 'Musí byť minimálne 1 porcia alebo porciu nedefinovať')\n            .max(100, 'Musí byť maximálne 100')\n            .default(null)\n            .nullable(),\n        method: yup\n            .string()\n            .defined()\n            .trim()\n            .transform((val) => (val === '' ? null : val))\n            .default(null)\n            .nullable(),\n        sources: yup\n            .array()\n            .of(\n                yup.object({\n                    value: yup.string().trim().max(1000, 'Musí byť maximálne 1000 znakov').required()\n                })\n            )\n            .required(),\n        categoryId: yup.number().integer().min(1, 'Prosím vyberte možnosť').required(),\n        recipeSections: yup\n            .array()\n            .of(\n                yup.object({\n                    name: yup\n                        .string()\n                        .defined()\n                        .trim()\n                        .transform((val) => (val === '' ? null : val))\n                        .max(80, 'Musí byť maximálne 80 znakov')\n                        .default(null)\n                        .nullable(),\n                    method: yup\n                        .string()\n                        .defined()\n                        .trim()\n                        .transform((val) => (val === '' ? null : val))\n                        .default(null)\n                        .nullable(),\n                    ingredients: yup\n                        .array()\n                        .of(\n                            yup.object({\n                                name: yup.string().trim().max(80, 'Musí byť maximálne 80 znakov').required('Povinná položka'),\n                                value: yup\n                                    .number()\n                                    .defined()\n                                    .min(0, 'Hodnota musí byť minimálne 0')\n                                    .default(null)\n                                    .nullable()\n                                    .transform((val) => (isNaN(val) ? null : val)),\n                                unitId: yup.number().integer().min(1, 'Povinná položka').required(),\n                                sortNumber: yup.number().defined().default(0).label('Poradové číslo')\n                            })\n                        )\n                        .required(),\n                    sortNumber: yup.number().defined().default(0).label('Poradové číslo')\n                })\n            )\n            .required(),\n        associatedRecipes: yup\n            .array()\n            .defined()\n            .transform((val) => (val === null ? [] : val))\n            .of(\n                yup.object({\n                    id: yup.number().integer().min(1).required(),\n                    name: yup.string().trim().min(1, 'Povinná položka').max(80, 'Musí byť maximálne 80 znakov').required()\n                })\n            )\n            .required(),\n        tags: yup\n            .array()\n            .of(\n                yup\n                    .object({\n                        id: yup.number().integer().min(1).required(),\n                        name: yup.string().trim().min(1, 'Povinná položka').max(80, 'Musí byť maximálne 80 znakov').required()\n                    })\n                    .required()\n            )\n            .required(),\n        pictures: yup\n            .array()\n            .of(\n                yup.object({\n                    id: yup.number().integer().min(1).required(),\n                    name: yup.string().trim().min(1, 'Povinná položka').max(80, 'Musí byť maximálne 80 znakov').required(),\n                    sortNumber: yup.number().defined().default(0).label('Poradové číslo')\n                })\n            )\n            .transform((val) => (val === '' ? [] : val))\n            .required()\n    })\n    .required();\n\nconst defaultValues = {\n    name: '',\n    description: null,\n    serves: null,\n    method: null,\n    sources: [],\n    recipeSections: [\n        {\n            name: '',\n            sortNumber: 1,\n            method: null,\n            ingredients: [{ name: '', sortNumber: 1, value: null, unitId: -1 }]\n        }\n    ],\n    tags: [],\n    associatedRecipes: [],\n    categoryId: -1,\n    pictures: []\n};\n\nconst RecipeEditPage: React.FC = () => {\n    const [error, setError] = useState<string>();\n    const [units, setUnits] = useState<SelectGroupOptions[]>([]);\n    const [listOfCategories, setListOfCategories] = useState<Api.SimpleCategory[]>([]);\n    const [listOfTags, setListOfTags] = useState<Api.SimpleTag[]>([]);\n    const [requiredUnits, setRequiredUnits] = useState<{ id: number; required: boolean }[]>([]);\n    const [nameOfRecipe, setNameOfRecipe] = useState<string>();\n    const [deleteModal, setDeleteModal] = useState<boolean>(false);\n    const navigate = useNavigate();\n    const queryClient = useQueryClient();\n    const params = useParams();\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n    const id = useId();\n\n    const methods = useForm<RecipeForm>({\n        resolver: yupResolver(schema),\n        defaultValues: async () => {\n            try {\n                const units: SelectGroupOptions[] = [];\n                const requiredUnit: { id: number; required: boolean }[] = [];\n\n                const listOfCategories = await queryClient.fetchQuery({\n                    queryKey: ['categories'],\n                    queryFn: ({ signal }) =>\n                        categoryApi.getCategories({ signal }).then((data) =>\n                            [...data].sort((a, b) =>\n                                a.name.localeCompare(b.name, undefined, {\n                                    sensitivity: 'base'\n                                })\n                            )\n                        )\n                });\n\n                const listOfTags = await queryClient.fetchQuery({\n                    queryKey: ['tags'],\n                    queryFn: ({ signal }) =>\n                        tagApi.getTags({ signal }).then((data) =>\n                            [...data].sort((a, b) =>\n                                a.name.localeCompare(b.name, undefined, {\n                                    sensitivity: 'base'\n                                })\n                            )\n                        )\n                });\n\n                const listOfUnitCategories = await queryClient.fetchQuery({\n                    queryKey: ['unitcategories'],\n                    queryFn: ({ signal }) =>\n                        unitCategoryApi.getUnitCategories({ signal }).then((data) =>\n                            [...data].sort((a, b) =>\n                                a.name.localeCompare(b.name, undefined, {\n                                    sensitivity: 'base'\n                                })\n                            )\n                        )\n                });\n\n                for (const category of listOfUnitCategories) {\n                    const unitsOfCategory = await queryClient.fetchQuery({\n                        queryKey: ['unitcategories', category.id, 'units'] as const,\n                        queryFn: async ({ queryKey }) => {\n                            const data = await unitApi.getUnitsByUnitCategory(queryKey[1]);\n                            return data.sort((a, b) =>\n                                a.name.localeCompare(b.name, undefined, {\n                                    sensitivity: 'base'\n                                })\n                            );\n                        }\n                    });\n\n                    unitsOfCategory.forEach((unit) => {\n                        requiredUnit.push({\n                            id: unit.id,\n                            required: unit.required\n                        });\n                    });\n\n                    units.push({\n                        optGroupId: category.id,\n                        optGroupName: category.name,\n                        options: unitsOfCategory.map((unit) => {\n                            return { value: unit.id, label: unit.name };\n                        })\n                    });\n                }\n\n                setListOfCategories(listOfCategories);\n                setListOfTags(listOfTags);\n                setRequiredUnits(requiredUnit);\n                setUnits(units);\n\n                if (params.recipeId) {\n                    const data = await queryClient.fetchQuery({\n                        queryKey: ['recipes', +params?.recipeId] as const,\n                        queryFn: async ({ queryKey, signal }) => recipeApi.getRecipe(queryKey[1], { signal })\n                    });\n\n                    const formattedData: RecipeForm = {\n                        ...data,\n                        sources: data.sources.map((s) => {\n                            return { value: s };\n                        }),\n                        associatedRecipes: data.associatedRecipes.map((ar) => {\n                            return { id: ar.id, name: ar.name };\n                        })\n                    };\n\n                    setNameOfRecipe(formattedData.name);\n                    return formattedData;\n                }\n            } catch (e) {\n                formatErrorMessage(e).then((message) => setError(message));\n            }\n            return defaultValues;\n        }\n    });\n\n    const {\n        formState: { isSubmitting, isLoading },\n        control\n    } = methods;\n\n    const cancelHandler = () => {\n        navigate(`/recipes?${searchParams}`);\n    };\n\n    const { mutate: saveRecipe, isPending: isSavingRecipe } = useMutation({\n        mutationFn: async ({ data, recipeId }: { data: Api.UpdateRecipe | Api.CreateRecipe; recipeId?: number }) => {\n            if (recipeId) {\n                await recipeApi.updateRecipe(recipeId, data);\n                return { id: recipeId };\n            } else {\n                return recipeApi.createRecipe(data);\n            }\n        },\n        onMutate: async () => {\n            await queryClient.cancelQueries({ queryKey: ['recipes'] });\n            queryClient.removeQueries({\n                queryKey: ['find']\n            });\n        },\n        onSettled: (data, error) => {\n            if (error) {\n                formatErrorMessage(error).then((message) => setError(message));\n            } else if (data) {\n                queryClient.removeQueries({ queryKey: ['recipes', data.id] });\n                navigate(`/recipes?${searchParams}`);\n            }\n        }\n    });\n\n    const submitHandler: SubmitHandler<RecipeForm> = async (data: RecipeForm) => {\n        const sendData = {\n            ...data,\n            tags: data.tags.map((tag) => tag.id),\n            sources: data.sources.map((s) => s.value),\n            associatedRecipes: data.associatedRecipes.map((rec) => rec.id),\n            recipeSections: data.recipeSections.map((rs, rsIndex) => {\n                return {\n                    ...rs,\n                    sortNumber: rsIndex + 1,\n                    id: 'id' in rs && rs.id ? rs.id : undefined,\n                    ingredients: rs.ingredients.map((i, iIndex) => {\n                        if (i.value === null) {\n                            const unitById = requiredUnits.find((unit) => unit.id === i.unitId);\n                            if (unitById?.required) {\n                                // TODO solve in yup\n                                methods.setError(`recipeSections.${rsIndex}.ingredients.${iIndex}.value`, {\n                                    type: 'required',\n                                    message: 'Pri danej jednotke musí byť zadané množstvo.'\n                                });\n                                throw new Error('chyba validacie');\n                            }\n                        }\n                        return {\n                            ...i,\n                            sortNumber: iIndex + 1,\n                            id: 'id' in i && i.id ? i.id : undefined\n                        };\n                    })\n                };\n            })\n        };\n        saveRecipe({ data: sendData, recipeId: params.recipeId ? +params.recipeId : undefined });\n    };\n\n    const deleteRecipeHandler = useCallback(() => {\n        setDeleteModal(true);\n    }, []);\n\n    const { mutate: deleteRecipe, isPending: isDeletingRecipe } = useMutation({\n        mutationFn: (recipeId: number) => recipeApi.deleteRecipe(recipeId),\n        onMutate: async () => {\n            await queryClient.cancelQueries({ queryKey: ['recipes'] });\n            queryClient.removeQueries({\n                queryKey: ['find']\n            });\n        },\n        onSettled: (data, error, recipeId) => {\n            if (error) {\n                formatErrorMessage(error).then((message) => setError(message));\n            } else if (recipeId) {\n                queryClient.removeQueries({ queryKey: ['recipes', recipeId] });\n                searchParams.set('page', `${DEFAULT_PAGE}`);\n                navigate(`/recipes?${searchParams}`);\n            }\n        }\n    });\n\n    const deleteRecipeConfirmHandler = useCallback(\n        (confirmed: boolean) => {\n            if (confirmed) {\n                if (params.recipeId) {\n                    deleteRecipe(+params.recipeId);\n                } else {\n                    setError('Neplatné používateľské ID!');\n                }\n            }\n            setDeleteModal(false);\n        },\n        [deleteRecipe, params.recipeId]\n    );\n\n    return (\n        <div className='row justify-content-center'>\n            <div className='col-lg-12 pt-3'>\n                <h1>{params.recipeId ? 'Zmena receptu' : 'Pridanie receptu'}</h1>\n                <FormProvider {...methods}>\n                    <Form\n                        onSubmit={methods.handleSubmit(submitHandler)}\n                        noValidate\n                        autoComplete='off'\n                    >\n                        <Input\n                            name='name'\n                            label='Názov'\n                        />\n                        <Textarea\n                            name='description'\n                            label='Popis'\n                        />\n                        <Input\n                            name='serves'\n                            label='Počet porcií'\n                            type='number'\n                            min={1}\n                        />\n                        <RecipeSections units={units} />\n                        <Textarea\n                            label='Postup prípravy receptu (voliteľné)'\n                            name='method'\n                            rows={10}\n                        />\n                        <Select\n                            name='categoryId'\n                            label='Kategória receptu'\n                            multiple={false}\n                            options={\n                                listOfCategories.map((category) => ({\n                                    value: category.id,\n                                    label: category.name\n                                })) ?? []\n                            }\n                        />\n                        {listOfCategories.length === 0 && (\n                            <p className='text-danger'>Nie je možné vybrať žiadnu kategóriu, nakoľko žiadna nie je zadefinovaná.</p>\n                        )}\n                        <AssociatedRecipes />\n                        <Form.Group className='mb-3'>\n                            <Form.Label htmlFor='tagsMultiselection'>Značky</Form.Label>\n                            <Controller\n                                control={control}\n                                name='tags'\n                                render={({ field: { onChange, value } }) => (\n                                    <Typeahead\n                                        id={id + 'tags'}\n                                        labelKey='name'\n                                        onChange={onChange}\n                                        options={listOfTags ?? []}\n                                        placeholder='Vyberte ľubovoľný počet značiek'\n                                        selected={value}\n                                        multiple\n                                    />\n                                )}\n                            />\n\n                            {listOfTags.length === 0 && (\n                                <p className='text-danger'>Nie je možné vybrať žiadnu značku, nakoľko žiadna nie je zadefinovaná.</p>\n                            )}\n                        </Form.Group>\n                        <Sources />\n                        <Pictures />\n                        <Stack\n                            gap={2}\n                            className='flex-md-row'\n                        >\n                            <Button\n                                variant='primary'\n                                type='submit'\n                            >\n                                {params.recipeId ? 'Zmeniť recept' : 'Pridať recept'}\n                            </Button>\n                            <Button\n                                variant='warning'\n                                type='button'\n                                onClick={cancelHandler}\n                            >\n                                Zrušiť\n                            </Button>\n                            <div className='flex-grow-1 d-none d-md-block'></div>\n\n                            {params.recipeId && (\n                                <Button\n                                    variant='danger'\n                                    type='button'\n                                    onClick={deleteRecipeHandler}\n                                >\n                                    Vymazať recept\n                                </Button>\n                            )}\n                        </Stack>\n                    </Form>\n                </FormProvider>\n            </div>\n            <Spinner show={isSubmitting || isLoading || isSavingRecipe || isDeletingRecipe} />\n            <Modal\n                show={!!deleteModal}\n                type='question'\n                message={`Prajete si vymazať recept \"${nameOfRecipe}\" ?`}\n                onClose={deleteRecipeConfirmHandler}\n            />\n            <Modal\n                show={!!error}\n                message={error}\n                type='error'\n                onClose={() => {\n                    setError(undefined);\n                }}\n            />\n        </div>\n    );\n};\n\nexport default RecipeEditPage;\n"],"names":["InputGroupText","React.forwardRef","className","bsPrefix","Component","props","ref","useBootstrapPrefix","_jsx","classNames","InputGroupCheckbox","FormCheckInput","InputGroupRadio","InputGroup","size","hasValidation","contextValue","useMemo","InputGroupContext","InputGroup$1","useForceUpdate","dispatch","useReducer","revision","_excluded","ownKeys","e","r","t","o","_objectSpread","_defineProperty","useAsync","allowNew","_props$delay","delay","isLoading","_props$minLength","minLength","onInputChange","onSearch","_props$options","options","_props$useCache","useCache","otherProps","_objectWithoutProperties","cacheRef","useRef","handleSearchDebouncedRef","queryRef","forceUpdate","prevProps","usePrevious","handleSearch","useCallback","query","useEffect","debounce","handleInputChange","cachedQuery","isFunction","AsyncTypeahead","forwardRef","emptyLabel","_props$promptText","promptText","_props$searchText","searchText","_useAsync","asyncProps","getEmptyLabel","React","Typeahead","_extends","Textarea","id","useId","register","errors","useFormContext","errorMessage","_b","_a","jsxs","Form","jsx","Select","getValues","setValue","get","value","v","option","opt","Ingredient","index","move","name","remove","units","dragable","setDragable","useState","onDragStart","onDragOver","onDrop","data1","nameErrorMessage","valueErrorMessage","unitErrorMessage","onEnableDrag","onDisableDrag","Button","FontAwesomeIcon","faGripVertical","faCircleMinus","Ingredients","control","fields","append","useFieldArray","Fragment","Stack","faCirclePlus","field","RecipeSections","array","Card","faCircleChevronUp","faCircleChevronDown","Input","InputWithBtn","buttonConfig","Sources","Picture","url","setUrl","queryClient","useQueryClient","response","queryKey","pictureApi","removePictureHandler","Col","faTrash","Pictures","imageInputRef","error","setError","uploadImage","isUploadingImage","useMutation","image","data","formatErrorMessage","message","pictureHandler","event","Row","Modal","Spinner","AssociatedRecipes","setIsLoading","list","setList","Api","recipeList","signal","recipeApi","recipe","err","filterBy","Controller","schema","yup.object","yup.string","val","yup.number","yup.array","defaultValues","RecipeEditPage","setUnits","listOfCategories","setListOfCategories","listOfTags","setListOfTags","requiredUnits","setRequiredUnits","nameOfRecipe","setNameOfRecipe","deleteModal","setDeleteModal","navigate","useNavigate","params","useParams","search","useLocation","searchParams","methods","useForm","yupResolver","requiredUnit","categoryApi","a","b","tagApi","listOfUnitCategories","unitCategoryApi","category","unitsOfCategory","unitApi","unit","formattedData","s","ar","isSubmitting","cancelHandler","saveRecipe","isSavingRecipe","recipeId","submitHandler","sendData","tag","rec","rs","rsIndex","i","iIndex","unitById","deleteRecipeHandler","deleteRecipe","isDeletingRecipe","DEFAULT_PAGE","deleteRecipeConfirmHandler","confirmed","FormProvider","onChange"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}